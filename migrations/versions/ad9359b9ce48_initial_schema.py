"""Initial schema

Revision ID: ad9359b9ce48
Revises: 
Create Date: 2025-07-28 20:50:53.660180

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ad9359b9ce48'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pricing_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=False),
    sa.Column('price_monthly', sa.Float(), nullable=True),
    sa.Column('price_yearly', sa.Float(), nullable=True),
    sa.Column('features', sa.JSON(), nullable=True),
    sa.Column('credits_per_month', sa.Integer(), nullable=True),
    sa.Column('max_meal_plans', sa.Integer(), nullable=True),
    sa.Column('video_generation', sa.Boolean(), nullable=True),
    sa.Column('pdf_export', sa.Boolean(), nullable=True),
    sa.Column('api_access', sa.Boolean(), nullable=True),
    sa.Column('priority_support', sa.Boolean(), nullable=True),
    sa.Column('stripe_price_id_monthly', sa.String(length=100), nullable=True),
    sa.Column('stripe_price_id_yearly', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=True),
    sa.Column('subscription_tier', sa.String(length=20), nullable=True),
    sa.Column('subscription_status', sa.String(length=20), nullable=True),
    sa.Column('subscription_end_date', sa.DateTime(), nullable=True),
    sa.Column('stripe_customer_id', sa.String(length=100), nullable=True),
    sa.Column('stripe_subscription_id', sa.String(length=100), nullable=True),
    sa.Column('credits_balance', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('email_verification_token', sa.String(length=100), nullable=True),
    sa.Column('email_verification_expires', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('trial_ends_at', sa.DateTime(), nullable=True),
    sa.Column('reset_token', sa.String(length=100), nullable=True),
    sa.Column('reset_token_expires', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email_verification_token')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)

    op.create_table('api_keys',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=64), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('scopes', sa.JSON(), nullable=True),
    sa.Column('rate_limit', sa.Integer(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('total_requests', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('revoked_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('api_keys', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_api_keys_key'), ['key'], unique=True)

    op.create_table('error_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('error_id', sa.String(length=36), nullable=False),
    sa.Column('error_type', sa.String(length=200), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=False),
    sa.Column('traceback', sa.Text(), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('context', sa.Text(), nullable=True),
    sa.Column('request_info', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=False),
    sa.Column('resolved_at', sa.DateTime(), nullable=True),
    sa.Column('resolved_by', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('counter', sa.Integer(), nullable=False),
    sa.Column('first_occurrence', sa.DateTime(), nullable=False),
    sa.Column('last_occurrence', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['resolved_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('error_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_error_logs_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_error_logs_error_id'), ['error_id'], unique=True)
        batch_op.create_index(batch_op.f('ix_error_logs_error_type'), ['error_type'], unique=False)
        batch_op.create_index(batch_op.f('ix_error_logs_resolved'), ['resolved'], unique=False)
        batch_op.create_index(batch_op.f('ix_error_logs_severity'), ['severity'], unique=False)
        batch_op.create_index(batch_op.f('ix_error_logs_user_id'), ['user_id'], unique=False)

    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('stripe_payment_intent_id', sa.String(length=100), nullable=True),
    sa.Column('stripe_charge_id', sa.String(length=100), nullable=True),
    sa.Column('stripe_invoice_id', sa.String(length=100), nullable=True),
    sa.Column('product_type', sa.String(length=50), nullable=True),
    sa.Column('product_id', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('payment_metadata', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('stripe_payment_intent_id')
    )
    op.create_table('saved_meal_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('meal_plan_data', sa.JSON(), nullable=False),
    sa.Column('total_calories', sa.Integer(), nullable=True),
    sa.Column('diet_type', sa.String(length=50), nullable=True),
    sa.Column('days', sa.Integer(), nullable=True),
    sa.Column('pdf_url', sa.String(length=500), nullable=True),
    sa.Column('video_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('share_token', sa.String(length=32), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('share_token')
    )
    op.create_table('shared_meal_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('share_token', sa.String(length=32), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('meal_plan_data', sa.JSON(), nullable=False),
    sa.Column('total_calories', sa.Integer(), nullable=True),
    sa.Column('diet_type', sa.String(length=50), nullable=True),
    sa.Column('requires_password', sa.Boolean(), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=True),
    sa.Column('view_count', sa.Integer(), nullable=True),
    sa.Column('download_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('share_token')
    )
    op.create_table('usage_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('resource_type', sa.String(length=50), nullable=True),
    sa.Column('resource_id', sa.String(length=100), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('endpoint', sa.String(length=200), nullable=True),
    sa.Column('method', sa.String(length=10), nullable=True),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('response_time_ms', sa.Integer(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('credits_used', sa.Integer(), nullable=True),
    sa.Column('credits_remaining', sa.Integer(), nullable=True),
    sa.Column('usage_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('usage_logs', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_usage_logs_created_at'), ['created_at'], unique=False)

    op.create_table('meal_plan_shares',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('meal_plan_id', sa.Integer(), nullable=False),
    sa.Column('shared_by_id', sa.Integer(), nullable=False),
    sa.Column('share_method', sa.String(length=50), nullable=True),
    sa.Column('recipient_email', sa.String(length=120), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('accessed_at', sa.DateTime(), nullable=True),
    sa.Column('access_count', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['meal_plan_id'], ['saved_meal_plans.id'], ),
    sa.ForeignKeyConstraint(['shared_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('meal_plan_shares')
    with op.batch_alter_table('usage_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_usage_logs_created_at'))

    op.drop_table('usage_logs')
    op.drop_table('shared_meal_plans')
    op.drop_table('saved_meal_plans')
    op.drop_table('payments')
    with op.batch_alter_table('error_logs', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_error_logs_user_id'))
        batch_op.drop_index(batch_op.f('ix_error_logs_severity'))
        batch_op.drop_index(batch_op.f('ix_error_logs_resolved'))
        batch_op.drop_index(batch_op.f('ix_error_logs_error_type'))
        batch_op.drop_index(batch_op.f('ix_error_logs_error_id'))
        batch_op.drop_index(batch_op.f('ix_error_logs_created_at'))

    op.drop_table('error_logs')
    with op.batch_alter_table('api_keys', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_api_keys_key'))

    op.drop_table('api_keys')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    op.drop_table('pricing_plans')
    # ### end Alembic commands ###
