class ErrorHandler{constructor(){this.setupGlobalErrorHandlers();this.setupPromiseRejectionHandlers();this.setupAsyncWrappers()}setupGlobalErrorHandlers(){window.addEventListener('error',(event)=>{this.logError('JavaScript Error',{message:event.message,filename:event.filename,lineno:event.lineno,colno:event.colno,stack:event.error?.stack});if(this.isCriticalError(event.error)){this.showErrorToUser('Something went wrong. Please refresh the page.')}if(event.error?.name==='CibozerError'){event.preventDefault()}});window.addEventListener('unhandledrejection',(event)=>{this.logError('Unhandled Promise Rejection',{reason:event.reason,promise:event.promise,stack:event.reason?.stack});this.showErrorToUser('An unexpected error occurred. Please try again.');event.preventDefault()})}setupPromiseRejectionHandlers(){const originalThen=Promise.prototype.then;const originalCatch=Promise.prototype.catch;Promise.prototype.then=function(onFulfilled,onRejected){const wrappedOnRejected=onRejected||((error)=>{window.errorHandler?.logError('Promise Rejection in then()',{error});throw error});return originalThen.call(this,onFulfilled,wrappedOnRejected)};Promise.prototype.catch=function(onRejected){const wrappedOnRejected=(error)=>{window.errorHandler?.logError('Promise Rejection in catch()',{error});if(onRejected){return onRejected(error)}throw error};return originalCatch.call(this,wrappedOnRejected)}}setupAsyncWrappers(){const originalFetch=window.fetch;window.fetch=async(...args)=>{try{const response=await originalFetch(...args);if(!response.ok){this.logError('HTTP Request Failed',{url:args[0],status:response.status,statusText:response.statusText})}return response}catch(error){this.logError('Fetch Error',{url:args[0],error:error.message,stack:error.stack});throw error}};const originalSetTimeout=window.setTimeout;window.setTimeout=(callback,delay,...args)=>{const wrappedCallback=(...callbackArgs)=>{try{return callback(...callbackArgs)}catch(error){this.logError('SetTimeout Callback Error',{error});throw error}};return originalSetTimeout(wrappedCallback,delay,...args)};const originalAddEventListener=EventTarget.prototype.addEventListener;EventTarget.prototype.addEventListener=function(type,listener,options){const wrappedListener=async(event)=>{try{if(listener.constructor.name==='AsyncFunction'){await listener.call(this,event)}else{listener.call(this,event)}}catch(error){window.errorHandler?.logError('Event Listener Error',{type,target:this.tagName||this.constructor.name,error:error.message,stack:error.stack});event.preventDefault?.()}};return originalAddEventListener.call(this,type,wrappedListener,options)}}safeAsync(asyncFn,fallbackValue=null,context='Unknown'){return async(...args)=>{try{return await asyncFn(...args)}catch(error){this.logError(`Safe Async Error(${context})`,{error:error.message,stack:error.stack,args:args.length});if(typeof fallbackValue==='function'){return fallbackValue(error)}return fallbackValue}}}async withRetry(asyncFn,maxRetries=3,delay=1000,context='Unknown'){let lastError;for(let attempt=1;attempt<=maxRetries;attempt++){try{return await asyncFn()}catch(error){lastError=error;this.logError(`Retry Attempt ${attempt}/${maxRetries}Failed(${context})`,{error:error.message,attempt,maxRetries});if(attempt<maxRetries){await this.sleep(delay*attempt)}}}this.logError(`All Retry Attempts Failed(${context})`,{error:lastError.message,maxRetries});throw lastError}createCircuitBreaker(asyncFn,failureThreshold=5,resetTimeout=60000){let failures=0;let lastFailureTime=0;let state='CLOSED';return async(...args)=>{const currentTime=Date.now();if(state==='OPEN'&&currentTime-lastFailureTime>=resetTimeout){state='HALF_OPEN';failures=0}if(state==='OPEN'){throw new Error('Circuit breaker is OPEN')}try{const result=await asyncFn(...args);if(state==='HALF_OPEN'){state='CLOSED'}failures=0;return result}catch(error){failures++;lastFailureTime=currentTime;this.logError('Circuit Breaker Failure',{failures,threshold:failureThreshold,state});if(failures>=failureThreshold){state='OPEN';this.logError('Circuit Breaker OPENED',{failures,resetTimeout})}throw error}}}withTimeout(asyncFn,timeoutMs=30000,context='Unknown'){return async(...args)=>{const timeoutPromise=new Promise((_,reject)=>{setTimeout(()=>{reject(new Error(`Operation timed out after ${timeoutMs}ms`))},timeoutMs)});try{return await Promise.race([ asyncFn(...args),timeoutPromise ])}catch(error){this.logError(`Timeout Error(${context})`,{timeout:timeoutMs,error:error.message});throw error}}}isCriticalError(error){const criticalErrors=[ 'ChunkLoadError','NetworkError','SecurityError','TypeError' ];return criticalErrors.some(type=>error?.name===type||error?.message?.includes(type))}logError(context,details){const errorEntry={timestamp:new Date().toISOString(),context,details,userAgent:navigator.userAgent,url:window.location.href,sessionId:this.getSessionId()};if(window.location.hostname==='localhost'){}if(window.CibozerLogger){window.CibozerLogger.error(context,details)}this.storeErrorLocally(errorEntry)}showErrorToUser(message,type='error'){if(window.CibozerApp?.showNotification){window.CibozerApp.showNotification(message,type)}else if(window.showNotification){window.showNotification(message,type)}else{alert(message)}}storeErrorLocally(errorEntry){try{const errors=JSON.parse(localStorage.getItem('cibozer_errors')||'[]');errors.push(errorEntry);if(errors.length>50){errors.splice(0,errors.length-50)}localStorage.setItem('cibozer_errors',JSON.stringify(errors))}catch(e){}}getSessionId(){let sessionId=sessionStorage.getItem('cibozer_session_id');if(!sessionId){sessionId='sess_'+Date.now()+'_'+Math.random().toString(36).substr(2,9);sessionStorage.setItem('cibozer_session_id',sessionId)}return sessionId}sleep(ms){return new Promise(resolve=>setTimeout(resolve,ms))}getErrorSummary(){try{const errors=JSON.parse(localStorage.getItem('cibozer_errors')||'[]');return{total:errors.length,recent:errors.slice(-10),byContext:errors.reduce((acc,error)=>{acc[error.context]=(acc[error.context]||0)+1;return acc},{})}}catch(e){return{total:0,recent:[],byContext:{}}}}clearErrors(){try{localStorage.removeItem('cibozer_errors')}catch(e){}}}window.errorHandler=new ErrorHandler();window.ErrorHandling={safeAsync:(...args)=>window.errorHandler.safeAsync(...args),withRetry:(...args)=>window.errorHandler.withRetry(...args),withTimeout:(...args)=>window.errorHandler.withTimeout(...args),createCircuitBreaker:(...args)=>window.errorHandler.createCircuitBreaker(...args),logError:(...args)=>window.errorHandler.logError(...args),getErrorSummary:()=>window.errorHandler.getErrorSummary(),clearErrors:()=>window.errorHandler.clearErrors()};class TouchGestureHandler{constructor(){this.touches=new Map();this.gestures=new Map();this.settings={swipeThreshold:50,swipeVelocity:0.3,tapTimeout:300,longPressTimeout:500,doubleTapTimeout:300,pinchThreshold:10};this.init()}init(){if(!this.isTouchDevice()){return}this.setupTouchListeners();this.setupGestureDetection();this.enhanceMobileInteractions()}isTouchDevice(){return 'ontouchstart' in window||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0}setupTouchListeners(){document.addEventListener('touchstart',this.handleTouchStart.bind(this),{passive:false});document.addEventListener('touchmove',this.handleTouchMove.bind(this),{passive:false});document.addEventListener('touchend',this.handleTouchEnd.bind(this),{passive:false});document.addEventListener('touchcancel',this.handleTouchCancel.bind(this),{passive:true});document.addEventListener('touchstart',(e)=>{const target=e.target.closest('.no-zoom,.btn,.form-control');if(target){e.preventDefault()}},{passive:false})}setupGestureDetection(){this.registerGesture('swipe-left',this.handleSwipeLeft.bind(this));this.registerGesture('swipe-right',this.handleSwipeRight.bind(this));this.registerGesture('swipe-up',this.handleSwipeUp.bind(this));this.registerGesture('swipe-down',this.handleSwipeDown.bind(this));this.registerGesture('tap',this.handleTap.bind(this));this.registerGesture('double-tap',this.handleDoubleTap.bind(this));this.registerGesture('long-press',this.handleLongPress.bind(this));this.registerGesture('pinch',this.handlePinch.bind(this))}enhanceMobileInteractions(){this.enhanceCardSwiping();this.enhanceModalGestures();this.enhanceNavigationGestures();this.enhanceFormInteractions();this.enhanceListInteractions()}handleTouchStart(e){const timestamp=Date.now();Array.from(e.changedTouches).forEach(touch=>{this.touches.set(touch.identifier,{startX:touch.clientX,startY:touch.clientY,currentX:touch.clientX,currentY:touch.clientY,startTime:timestamp,target:e.target,moved:false})});if(e.touches.length===2){this.handlePinchStart(e)}}handleTouchMove(e){Array.from(e.changedTouches).forEach(touch=>{const touchData=this.touches.get(touch.identifier);if(touchData){touchData.currentX=touch.clientX;touchData.currentY=touch.clientY;touchData.moved=true;const deltaX=touchData.currentX-touchData.startX;const deltaY=touchData.currentY-touchData.startY;const distance=Math.sqrt(deltaX*deltaX+deltaY*deltaY);if(distance>10){touchData.moved=true}}});if(e.touches.length===2){this.handlePinchMove(e)}}handleTouchEnd(e){const timestamp=Date.now();Array.from(e.changedTouches).forEach(touch=>{const touchData=this.touches.get(touch.identifier);if(touchData){const deltaX=touchData.currentX-touchData.startX;const deltaY=touchData.currentY-touchData.startY;const duration=timestamp-touchData.startTime;const distance=Math.sqrt(deltaX*deltaX+deltaY*deltaY);const velocity=distance/duration;this.detectGesture(touchData,deltaX,deltaY,duration,velocity,e);this.touches.delete(touch.identifier)}})}handleTouchCancel(e){Array.from(e.changedTouches).forEach(touch=>{this.touches.delete(touch.identifier)})}detectGesture(touchData,deltaX,deltaY,duration,velocity,originalEvent){const absX=Math.abs(deltaX);const absY=Math.abs(deltaY);if(velocity>this.settings.swipeVelocity&&(absX>this.settings.swipeThreshold||absY>this.settings.swipeThreshold)){if(absX>absY){const direction=deltaX>0 ? 'right':'left';this.triggerGesture(`swipe-${direction}`,{target:touchData.target,deltaX,deltaY,velocity,originalEvent})}else{const direction=deltaY>0 ? 'down':'up';this.triggerGesture(`swipe-${direction}`,{target:touchData.target,deltaX,deltaY,velocity,originalEvent})}}else if(!touchData.moved&&duration<this.settings.tapTimeout){this.handleTapGesture(touchData,originalEvent)}else if(!touchData.moved&&duration>this.settings.longPressTimeout){this.triggerGesture('long-press',{target:touchData.target,duration,originalEvent})}}handleTapGesture(touchData,originalEvent){const now=Date.now();const lastTap=this.lastTapTime||0;const lastTapTarget=this.lastTapTarget;if(now-lastTap<this.settings.doubleTapTimeout&&lastTapTarget===touchData.target){this.triggerGesture('double-tap',{target:touchData.target,originalEvent});this.lastTapTime=0}else{setTimeout(()=>{if(this.lastTapTime===now){this.triggerGesture('tap',{target:touchData.target,originalEvent})}},this.settings.doubleTapTimeout)}this.lastTapTime=now;this.lastTapTarget=touchData.target}handlePinchStart(e){if(e.touches.length!==2)return;const touch1=e.touches[0];const touch2=e.touches[1];this.pinchData={startDistance:this.getDistance(touch1,touch2),startScale:1,target:e.target}}handlePinchMove(e){if(e.touches.length!==2||!this.pinchData)return;const touch1=e.touches[0];const touch2=e.touches[1];const currentDistance=this.getDistance(touch1,touch2);const scale=currentDistance/this.pinchData.startDistance;if(Math.abs(scale-this.pinchData.startScale)>0.1){this.triggerGesture('pinch',{target:this.pinchData.target,scale,originalEvent:e});this.pinchData.startScale=scale}}getDistance(touch1,touch2){const dx=touch1.clientX-touch2.clientX;const dy=touch1.clientY-touch2.clientY;return Math.sqrt(dx*dx+dy*dy)}registerGesture(name,handler){this.gestures.set(name,handler)}triggerGesture(name,data){const handler=this.gestures.get(name);if(handler){try{handler(data)}catch(error){if(window.errorHandler){window.errorHandler.logError('Gesture Handler Error',{gesture:name,error:error.message})}}}const event=new CustomEvent(`cibozer-gesture-${name}`,{detail:data,bubbles:true});data.target.dispatchEvent(event)}handleSwipeLeft(data){const element=data.target.closest('.swipeable,.card,.modal');if(element?.classList.contains('meal-plan-card')){this.handleMealPlanSwipe(element,'left')}else if(element?.classList.contains('modal')){this.handleModalSwipe(element,'left')}}handleSwipeRight(data){const element=data.target.closest('.swipeable,.card,.modal');if(element?.classList.contains('meal-plan-card')){this.handleMealPlanSwipe(element,'right')}else if(element?.classList.contains('modal')){this.handleModalSwipe(element,'right')}else{this.handleBackNavigation()}}handleSwipeUp(data){const element=data.target.closest('.modal,.sheet');if(element?.classList.contains('modal')){const bsModal=bootstrap.Modal.getInstance(element);if(bsModal){bsModal.hide()}}}handleSwipeDown(data){if(data.target.closest('.refresh-container')&&window.scrollY===0){this.handlePullToRefresh()}}handleTap(data){const target=data.target;this.addTapFeedback(target);if(target.classList.contains('tap-to-copy')){this.handleTapToCopy(target)}}handleDoubleTap(data){const target=data.target;if(target.closest('.zoomable')){this.handleZoom(target)}else if(target.closest('.likeable')){this.handleDoubleTapLike(target)}}handleLongPress(data){const target=data.target;if(target.closest('.meal-plan-card')){this.showMealPlanContextMenu(target,data.originalEvent)}else if(target.closest('.ingredient-item')){this.showIngredientOptions(target,data.originalEvent)}}handlePinch(data){const target=data.target.closest('.zoomable,.image-container');if(target){this.handlePinchZoom(target,data.scale)}}enhanceCardSwiping(){const cards=document.querySelectorAll('.meal-plan-card,.recipe-card');cards.forEach(card=>{card.classList.add('swipeable');if(!card.querySelector('.swipe-indicators')){const indicators=document.createElement('div');indicators.className='swipe-indicators';indicators.innerHTML=`<div class="swipe-action left"><i class="fas fa-heart"></i></div><div class="swipe-action right"><i class="fas fa-share"></i></div>`;card.appendChild(indicators)}})}enhanceModalGestures(){document.addEventListener('shown.bs.modal',(e)=>{const modal=e.target;modal.classList.add('touch-enhanced');if(!modal.querySelector('.swipe-indicator')){const indicator=document.createElement('div');indicator.className='swipe-indicator';indicator.innerHTML='<div class="swipe-handle"></div>';modal.querySelector('.modal-content').prepend(indicator)}})}enhanceNavigationGestures(){const leftEdge=document.createElement('div');leftEdge.className='edge-swipe-zone left';leftEdge.style.cssText=` position:fixed;left:0;top:0;width:20px;height:100vh;z-index:1000;pointer-events:none;`;document.body.appendChild(leftEdge)}enhanceFormInteractions(){const forms=document.querySelectorAll('form');forms.forEach(form=>{form.addEventListener('cibozer-gesture-swipe-left',(e)=>{this.focusNextField(form,e.detail.target)});form.addEventListener('cibozer-gesture-swipe-right',(e)=>{this.focusPreviousField(form,e.detail.target)})})}enhanceListInteractions(){const lists=document.querySelectorAll('.list-group,.ingredient-list');lists.forEach(list=>{list.addEventListener('cibozer-gesture-swipe-left',(e)=>{const item=e.detail.target.closest('.list-group-item,.ingredient-item');if(item){this.showItemActions(item)}})})}handleMealPlanSwipe(card,direction){if(direction==='left'){this.likeMealPlan(card)}else if(direction==='right'){this.shareMealPlan(card)}}handleModalSwipe(modal,direction){if(direction==='left'||direction==='right'){const bsModal=bootstrap.Modal.getInstance(modal);if(bsModal){bsModal.hide()}}}handleBackNavigation(){if(window.history.length>1){window.history.back()}}handlePullToRefresh(){if(window.location.reload){this.showPullToRefreshFeedback();setTimeout(()=>{window.location.reload()},500)}}addTapFeedback(target){target.classList.add('tap-feedback');setTimeout(()=>{target.classList.remove('tap-feedback')},150)}showMealPlanContextMenu(target,event){if(window.CibozerApp?.showNotification){window.CibozerApp.showNotification('Long press detected on meal plan','info')}}likeMealPlan(card){const likeBtn=card.querySelector('.like-btn,.favorite-btn');if(likeBtn){likeBtn.click()}this.showSwipeAction(card,'liked')}shareMealPlan(card){const shareBtn=card.querySelector('.share-btn');if(shareBtn){shareBtn.click()}this.showSwipeAction(card,'shared')}showSwipeAction(card,action){const feedback=document.createElement('div');feedback.className=`swipe-feedback ${action}`;feedback.textContent=action==='liked' ? '❤️ Liked!':'📤 Shared!';card.appendChild(feedback);setTimeout(()=>{feedback.remove()},2000)}showPullToRefreshFeedback(){const feedback=document.createElement('div');feedback.className='pull-refresh-feedback';feedback.innerHTML=`<div class="spinner-border spinner-border-sm" role="status"><span class="visually-hidden">Refreshing...</span></div><span class="ms-2">Refreshing...</span>`;document.body.appendChild(feedback);setTimeout(()=>{feedback.remove()},2000)}focusNextField(form,currentField){const fields=Array.from(form.querySelectorAll('input,select,textarea'));const currentIndex=fields.indexOf(currentField);const nextField=fields[currentIndex+1];if(nextField){nextField.focus()}}focusPreviousField(form,currentField){const fields=Array.from(form.querySelectorAll('input,select,textarea'));const currentIndex=fields.indexOf(currentField);const prevField=fields[currentIndex-1];if(prevField){prevField.focus()}}}const style=document.createElement('style');style.textContent=` .tap-feedback{transform:scale(0.95);transition:transform 0.15s ease}.swipe-indicators{position:absolute;top:0;left:0;right:0;bottom:0;pointer-events:none;z-index:1}.swipe-action{position:absolute;top:50%;transform:translateY(-50%);width:60px;height:60px;border-radius:50%;display:flex;align-items:center;justify-content:center;font-size:24px;color:white;opacity:0;transition:opacity 0.2s ease}.swipe-action.left{left:20px;background:#e74c3c}.swipe-action.right{right:20px;background:#3498db}.swipe-feedback{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);background:rgba(0,0,0,0.8);color:white;padding:8px 16px;border-radius:20px;font-size:14px;z-index:1000;animation:swipeFeedback 2s ease forwards}@keyframes swipeFeedback{0%{opacity:0;transform:translate(-50%,-50%)scale(0.8)}20%{opacity:1;transform:translate(-50%,-50%)scale(1)}80%{opacity:1;transform:translate(-50%,-50%)scale(1)}100%{opacity:0;transform:translate(-50%,-50%)scale(0.8)}}.swipe-indicator{display:flex;justify-content:center;padding:8px}.swipe-handle{width:40px;height:4px;background:#dee2e6;border-radius:2px}.pull-refresh-feedback{position:fixed;top:20px;left:50%;transform:translateX(-50%);background:white;padding:12px 20px;border-radius:20px;box-shadow:0 2px 10px rgba(0,0,0,0.1);z-index:1050;display:flex;align-items:center}.touch-enhanced{touch-action:pan-y}.no-zoom{touch-action:manipulation}`;document.head.appendChild(style);document.addEventListener('DOMContentLoaded',()=>{if(window.matchMedia('(pointer:coarse)').matches){window.touchGestures=new TouchGestureHandler()}});if(typeof module!=='undefined'&&module.exports){module.exports=TouchGestureHandler}class KeyboardNavigationManager{constructor(){this.focusableElements=[ 'button','a[href]','input:not([disabled]):not([type="hidden"])','select:not([disabled])','textarea:not([disabled])','[tabindex]:not([tabindex="-1"])','[contenteditable="true"]' ].join(',');this.shortcuts=new Map();this.focusHistory=[];this.currentModalStack=[];this.init()}init(){this.setupFocusManagement();this.setupKeyboardShortcuts();this.setupModalFocusTrapping();this.setupSkipLinks();this.enhanceFocusIndicators()}setupFocusManagement(){document.addEventListener('focusin',(e)=>{this.focusHistory.push(e.target);if(this.focusHistory.length>10){this.focusHistory.shift()}});document.addEventListener('focusout',(e)=>{setTimeout(()=>{if(!document.activeElement||document.activeElement===document.body){this.restoreFocus()}},100)});document.addEventListener('DOMContentLoaded',()=>{this.setInitialFocus()})}setupKeyboardShortcuts(){this.registerShortcut('Escape',()=>{this.handleEscape()});this.registerShortcut('Tab',(e)=>{this.handleTabNavigation(e)});this.registerShortcut('ArrowUp',(e)=>{this.handleArrowNavigation(e,'up')});this.registerShortcut('ArrowDown',(e)=>{this.handleArrowNavigation(e,'down')});this.registerShortcut('ArrowLeft',(e)=>{this.handleArrowNavigation(e,'left')});this.registerShortcut('ArrowRight',(e)=>{this.handleArrowNavigation(e,'right')});this.registerShortcut('Enter',(e)=>{this.handleEnterKey(e)});this.registerShortcut(' ',(e)=>{this.handleSpaceKey(e)});this.registerShortcut('Alt+h',()=>{window.location.href='/'});this.registerShortcut('Alt+c',()=>{const createBtn=document.querySelector('[href*="create"]');if(createBtn)createBtn.click()});this.registerShortcut('Alt+d',()=>{const dashboardBtn=document.querySelector('[href*="dashboard"]');if(dashboardBtn)dashboardBtn.click()});this.registerShortcut('Alt+?',()=>{this.showKeyboardHelp()});document.addEventListener('keydown',(e)=>{this.handleKeydown(e)})}setupModalFocusTrapping(){document.addEventListener('shown.bs.modal',(e)=>{this.trapFocusInModal(e.target);this.currentModalStack.push(e.target)});document.addEventListener('hidden.bs.modal',(e)=>{this.currentModalStack=this.currentModalStack.filter(modal=>modal!==e.target);this.restoreFocus()})}setupSkipLinks(){const skipNav=document.createElement('div');skipNav.className='skip-nav';skipNav.innerHTML=`<a href="#main-content" class="skip-link">Skip to main content</a><a href="#navigation" class="skip-link">Skip to navigation</a>`;const style=document.createElement('style');style.textContent=` .skip-nav{position:absolute;top:-100px;left:0;z-index:9999}.skip-link{position:absolute;top:0;left:0;background:#000;color:#fff;padding:8px 16px;text-decoration:none;font-weight:bold;z-index:10000}.skip-link:focus{top:0;outline:2px solid #fff;outline-offset:2px}`;document.head.appendChild(style);document.body.insertBefore(skipNav,document.body.firstChild);const mainContent=document.querySelector('main')||document.querySelector('.container')||document.querySelector('#main-content');if(mainContent&&!mainContent.id){mainContent.id='main-content'}const navigation=document.querySelector('nav')||document.querySelector('.navbar')||document.querySelector('#navigation');if(navigation&&!navigation.id){navigation.id='navigation'}}enhanceFocusIndicators(){const style=document.createElement('style');style.textContent=`*:focus-visible{outline:3px solid var(--primary-color,#007bff)!important;outline-offset:2px!important;border-radius:4px;box-shadow:0 0 0 1px rgba(255,255,255,0.8)}.btn:focus-visible{outline:3px solid var(--primary-color,#007bff)!important;outline-offset:2px!important;transform:translateY(-1px);box-shadow:0 4px 8px rgba(0,0,0,0.2)}.form-control:focus,.form-select:focus{border-color:var(--primary-color,#007bff)!important;box-shadow:0 0 0 0.2rem rgba(0,123,255,0.25)!important;outline:2px solid var(--primary-color,#007bff)!important;outline-offset:2px!important}`;document.head.appendChild(style)}registerShortcut(key,callback){this.shortcuts.set(key.toLowerCase(),callback)}handleKeydown(e){const key=this.getKeyString(e);const callback=this.shortcuts.get(key.toLowerCase());if(callback){if(this.isFormElement(e.target)&&!key.includes('Alt+')&&!key.includes('Ctrl+')){return}callback(e)}}getKeyString(e){let key=e.key;if(e.altKey)key='Alt+'+key;if(e.ctrlKey)key='Ctrl+'+key;if(e.shiftKey&&key.length>1)key='Shift+'+key;return key}isFormElement(element){const formElements=['INPUT','TEXTAREA','SELECT'];return formElements.includes(element.tagName)||element.contentEditable==='true'}handleEscape(){if(this.currentModalStack.length>0){const currentModal=this.currentModalStack[this.currentModalStack.length-1];const bsModal=bootstrap.Modal.getInstance(currentModal);if(bsModal){bsModal.hide();return}}const openDropdown=document.querySelector('.dropdown-menu.show');if(openDropdown){const dropdown=bootstrap.Dropdown.getInstance(openDropdown.previousElementSibling);if(dropdown){dropdown.hide();return}}if(this.isFormElement(document.activeElement)){if(document.activeElement.tagName==='INPUT'&&document.activeElement.type==='text'){document.activeElement.value=''}}}handleTabNavigation(e){if(this.currentModalStack.length>0){const currentModal=this.currentModalStack[this.currentModalStack.length-1];this.constrainTabToModal(e,currentModal)}}handleArrowNavigation(e,direction){const activeElement=document.activeElement;if(activeElement.closest('.dropdown-menu')){e.preventDefault();this.navigateDropdown(activeElement,direction);return}if(activeElement.closest('.nav-tabs')||activeElement.closest('.nav-pills')){e.preventDefault();this.navigateTabs(activeElement,direction);return}if(activeElement.closest('.list-group')){e.preventDefault();this.navigateList(activeElement,direction);return}}handleEnterKey(e){if(e.target.tagName==='BUTTON'||(e.target.tagName==='A'&&e.target.href)){e.target.click()}}handleSpaceKey(e){if(e.target.tagName==='BUTTON'){e.preventDefault();e.target.click()}}trapFocusInModal(modal){const focusableElements=modal.querySelectorAll(this.focusableElements);const firstElement=focusableElements[0];const lastElement=focusableElements[focusableElements.length-1];if(firstElement){firstElement.focus()}modal.addEventListener('keydown',(e)=>{if(e.key==='Tab'){if(e.shiftKey){if(document.activeElement===firstElement){e.preventDefault();lastElement.focus()}}else{if(document.activeElement===lastElement){e.preventDefault();firstElement.focus()}}}})}constrainTabToModal(e,modal){const focusableElements=Array.from(modal.querySelectorAll(this.focusableElements));const currentIndex=focusableElements.indexOf(document.activeElement);if(currentIndex===-1)return;if(e.shiftKey){if(currentIndex===0){e.preventDefault();focusableElements[focusableElements.length-1].focus()}}else{if(currentIndex===focusableElements.length-1){e.preventDefault();focusableElements[0].focus()}}}navigateDropdown(element,direction){const dropdown=element.closest('.dropdown-menu');const items=Array.from(dropdown.querySelectorAll('.dropdown-item:not([disabled])'));const currentIndex=items.indexOf(element);let nextIndex;if(direction==='up'){nextIndex=currentIndex>0 ? currentIndex-1:items.length-1}else if(direction==='down'){nextIndex=currentIndex<items.length-1 ? currentIndex+1:0}if(items[nextIndex]){items[nextIndex].focus()}}navigateTabs(element,direction){const tabContainer=element.closest('.nav-tabs,.nav-pills');const tabs=Array.from(tabContainer.querySelectorAll('.nav-link:not([disabled])'));const currentIndex=tabs.indexOf(element);let nextIndex;if(direction==='left'){nextIndex=currentIndex>0 ? currentIndex-1:tabs.length-1}else if(direction==='right'){nextIndex=currentIndex<tabs.length-1 ? currentIndex+1:0}if(tabs[nextIndex]){tabs[nextIndex].focus();tabs[nextIndex].click()}}navigateList(element,direction){const list=element.closest('.list-group');const items=Array.from(list.querySelectorAll('.list-group-item:not([disabled])'));const currentIndex=items.indexOf(element);let nextIndex;if(direction==='up'){nextIndex=currentIndex>0 ? currentIndex-1:items.length-1}else if(direction==='down'){nextIndex=currentIndex<items.length-1 ? currentIndex+1:0}if(items[nextIndex]){items[nextIndex].focus()}}setInitialFocus(){const skipLink=document.querySelector('.skip-link');if(skipLink){return}const firstFocusable=document.querySelector(this.focusableElements);if(firstFocusable){if(!this.isFormElement(firstFocusable)){firstFocusable.focus()}}}restoreFocus(){for(let i=this.focusHistory.length-1;i>=0;i--){const element=this.focusHistory[i];if(element&&element.isConnected&&element.offsetParent!==null){element.focus();return}}const firstFocusable=document.querySelector(this.focusableElements);if(firstFocusable){firstFocusable.focus()}}showKeyboardHelp(){const helpModal=document.createElement('div');helpModal.className='modal fade';helpModal.innerHTML=`<div class="modal-dialog modal-lg"><div class="modal-content"><div class="modal-header"><h5 class="modal-title">Keyboard Shortcuts</h5><button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button></div><div class="modal-body"><div class="row"><div class="col-md-6"><h6>Navigation</h6><ul class="list-unstyled"><li><kbd>Alt</kbd>+<kbd>H</kbd>-Home</li><li><kbd>Alt</kbd>+<kbd>C</kbd>-Create</li><li><kbd>Alt</kbd>+<kbd>D</kbd>-Dashboard</li><li><kbd>Tab</kbd>-Next element</li><li><kbd>Shift</kbd>+<kbd>Tab</kbd>-Previous element</li></ul></div><div class="col-md-6"><h6>General</h6><ul class="list-unstyled"><li><kbd>Esc</kbd>-Close modal/dropdown</li><li><kbd>Enter</kbd>-Activate button/link</li><li><kbd>Space</kbd>-Activate button</li><li><kbd>↑</kbd><kbd>↓</kbd>-Navigate lists</li><li><kbd>Alt</kbd>+<kbd>?</kbd>-This help</li></ul></div></div></div><div class="modal-footer"><button type="button" class="btn btn-primary" data-bs-dismiss="modal">Got it!</button></div></div></div>`;document.body.appendChild(helpModal);const modal=new bootstrap.Modal(helpModal);modal.show();helpModal.addEventListener('hidden.bs.modal',()=>{document.body.removeChild(helpModal)})}}document.addEventListener('DOMContentLoaded',()=>{window.keyboardNav=new KeyboardNavigationManager()});if(typeof module!=='undefined'&&module.exports){module.exports=KeyboardNavigationManager}let isLoading=false;document.addEventListener('DOMContentLoaded',function(){initializeTooltips();initializeModals();initializeNavigation();setTimeout(()=>{cleanupStuckStates()},1000)});function cleanupStuckStates(){const backdrops=document.querySelectorAll('.modal-backdrop');backdrops.forEach(backdrop=>{backdrop.remove()});document.body.classList.remove('modal-open');document.body.style.overflow='';document.body.style.paddingRight='';const modals=document.querySelectorAll('.modal.show');modals.forEach(modal=>{const bsModal=bootstrap.Modal.getInstance(modal);if(bsModal&&bsModal._isShown){return}if(!modal.dataset.shouldBeVisible){modal.classList.remove('show');modal.style.display='none';modal.setAttribute('aria-hidden','true')}})}function initializeTooltips(){if(typeof bootstrap!=='undefined'&&bootstrap.Tooltip){const tooltips=document.querySelectorAll('[data-bs-toggle="tooltip"]');tooltips.forEach(el=>{try{new bootstrap.Tooltip(el)}catch(e){console.error('Tooltip error:',e)}})}}function initializeModals(){document.addEventListener('show.bs.modal',function(e){isLoading=true});document.addEventListener('hidden.bs.modal',function(e){isLoading=false;if(e.target.id==='resultsModal'){e.target.dataset.shouldBeVisible='false';setTimeout(()=>{cleanupStuckStates()},300)}})}function initializeNavigation(){const navLinks=document.querySelectorAll('.nav-link');navLinks.forEach(link=>{link.addEventListener('click',function(e){})})}function showLoading(message='Loading...'){isLoading=true;let loadingModal=document.getElementById('loadingModal');if(loadingModal){const modal=bootstrap.Modal.getInstance(loadingModal)||new bootstrap.Modal(loadingModal);modal.show()}}function hideLoading(){isLoading=false;const loadingModal=document.getElementById('loadingModal');if(loadingModal){const modal=bootstrap.Modal.getInstance(loadingModal);if(modal){modal.hide()}}setTimeout(()=>{cleanupStuckStates()},100)}function showNotification(message,type='info'){const alert=document.createElement('div');alert.className=`alert alert-${type}alert-dismissible fade show`;alert.style.cssText=` position:fixed;top:20px;right:20px;z-index:9999;min-width:300px;`;alert.innerHTML=` ${message}<button type="button" class="btn-close" data-bs-dismiss="alert"></button>`;document.body.appendChild(alert);setTimeout(()=>{if(alert.parentNode){alert.remove()}},5000)}window.addEventListener('error',function(e){console.error('🚨 GLOBAL ERROR:',e.message,'at',e.filename,':',e.lineno);console.error('🚨 ERROR STACK:',e.error ? e.error.stack:'No stack available');if(e.message.includes('modal')||e.message.includes('backdrop')){cleanupStuckStates()}});window.addEventListener('unhandledrejection',function(e){console.error('🚨 UNHANDLED PROMISE REJECTION:',e.reason);console.error('🚨 PROMISE:',e.promise)});function downloadPDF(){showNotification('PDF download feature coming soon!','info')}function viewShoppingList(){showNotification('Shopping list feature coming soon!','info')}function generateAnother(){const resultsModal=bootstrap.Modal.getInstance(document.getElementById('resultsModal'));if(resultsModal){resultsModal.hide()}const form=document.getElementById('mealPlanForm');if(form){form.reset()}}window.CibozerClean={showLoading,hideLoading,showNotification,cleanupStuckStates};window.downloadPDF=downloadPDF;window.viewShoppingList=viewShoppingList;window.generateAnother=generateAnother;setInterval(()=>{if(!isLoading){cleanupStuckStates()}},5000);