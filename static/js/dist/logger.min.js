class CibozerLogger{constructor(){this.logs=[];this.maxLogs=1000;this.syncInterval=5000;this.syncEndpoint='/api/logs/sync';this.logLevels={DEBUG:0,INFO:1,WARN:2,ERROR:3};this.currentLevel=this.logLevels.DEBUG;this.sessionId=this.generateSessionId();this.startSync();this.overrideConsole();this.info('Logger initialized',{sessionId:this.sessionId})}generateSessionId(){return `session_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}overrideConsole(){const originalConsole={log:console.log,info:console.info,warn:console.warn,error:console.error,debug:console.debug};console.log=(...args)=>{originalConsole.log(...args);this.log('INFO',args)};console.info=(...args)=>{originalConsole.info(...args);this.info(...args)};console.warn=(...args)=>{originalConsole.warn(...args);this.warn(...args)};console.error=(...args)=>{originalConsole.error(...args);this.error(...args)};console.debug=(...args)=>{originalConsole.debug(...args);this.debug(...args)}}log(level,...args){const logEntry={level,timestamp:new Date().toISOString(),sessionId:this.sessionId,url:window.location.href,userAgent:navigator.userAgent,message:args.map(arg=>{if(typeof arg==='object'){try{return JSON.stringify(arg,null,2)}catch(e){return String(arg)}}return String(arg)}).join(' ')};if(level==='ERROR'){logEntry.stack=new Error().stack}this.logs.push(logEntry);if(this.logs.length>this.maxLogs){this.logs=this.logs.slice(-this.maxLogs)}this.saveToLocalStorage()}debug(...args){if(this.currentLevel<=this.logLevels.DEBUG){this.log('DEBUG',...args)}}info(...args){if(this.currentLevel<=this.logLevels.INFO){this.log('INFO',...args)}}warn(...args){if(this.currentLevel<=this.logLevels.WARN){this.log('WARN',...args)}}error(...args){if(this.currentLevel<=this.logLevels.ERROR){this.log('ERROR',...args)}}saveToLocalStorage(){try{localStorage.setItem('cibozer_logs',JSON.stringify({sessionId:this.sessionId,logs:this.logs.slice(-100)}))}catch(e){}}loadFromLocalStorage(){try{const stored=localStorage.getItem('cibozer_logs');if(stored){const data=JSON.parse(stored);if(data.sessionId===this.sessionId){this.logs=[...data.logs,...this.logs]}}}catch(e){}}async syncToBackend(){if(this.logs.length===0)return;const logsToSync=[...this.logs];this.logs=[];try{const response=await fetch(this.syncEndpoint,{method:'POST',headers:{'Content-Type':'application/json','X-CSRF-Token':this.getCSRFToken()},body:JSON.stringify({sessionId:this.sessionId,logs:logsToSync})});if(!response.ok){this.logs=[...logsToSync,...this.logs];this.warn('Failed to sync logs to backend',response.status)}}catch(error){this.logs=[...logsToSync,...this.logs];this.warn('Error syncing logs',error)}}getCSRFToken(){const token=document.querySelector('meta[name="csrf-token"]');return token ? token.content:''}startSync(){this.loadFromLocalStorage();setInterval(()=>{this.syncToBackend()},this.syncInterval);window.addEventListener('beforeunload',()=>{this.syncToBackend()})}logAPIRequest(url,options={}){const requestId=Math.random().toString(36).substr(2,9);this.info('API Request',{requestId,url,method:options.method||'GET',headers:options.headers,body:options.body});return requestId}logAPIResponse(requestId,response,data){this.info('API Response',{requestId,status:response.status,statusText:response.statusText,headers:Object.fromEntries(response.headers.entries()),data:data})}logAPIError(requestId,error){this.error('API Error',{requestId,error:error.message,stack:error.stack})}async fetchWithLogging(url,options={}){const requestId=this.logAPIRequest(url,options);try{const response=await fetch(url,options);const contentType=response.headers.get('content-type');if(contentType&&contentType.includes('application/json')){const data=await response.json();this.logAPIResponse(requestId,response,data);return{...response,json:async()=>data,ok:response.ok,status:response.status,statusText:response.statusText}}else{const text=await response.text();this.logAPIResponse(requestId,response,{text});if(contentType&&contentType.includes('text/html')){this.error('Received HTML instead of JSON',{requestId,url,html:text.substring(0,500)})}return{...response,text:async()=>text,json:async()=>{throw new Error(`Expected JSON but received ${contentType}`)},ok:response.ok,status:response.status,statusText:response.statusText}}}catch(error){this.logAPIError(requestId,error);throw error}}getLogs(level=null){if(level){return this.logs.filter(log=>log.level===level)}return this.logs}clearLogs(){this.logs=[];this.saveToLocalStorage();this.info('Logs cleared')}}window.CibozerLogger=new CibozerLogger();window.originalFetch=window.fetch;window.fetch=function(...args){return window.CibozerLogger.fetchWithLogging(...args)};window.CibozerLogger.info('Page loaded',{title:document.title,referrer:document.referrer,timestamp:new Date().toISOString()});window.addEventListener('error',(event)=>{window.CibozerLogger.error('Uncaught error',{message:event.message,filename:event.filename,line:event.lineno,column:event.colno,error:event.error ? event.error.stack:'No stack trace'})});window.addEventListener('unhandledrejection',(event)=>{window.CibozerLogger.error('Unhandled promise rejection',{reason:event.reason,promise:event.promise})});