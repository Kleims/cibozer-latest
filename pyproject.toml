[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | migrations
)/
'''

[tool.isort]
profile = "black"
line_length = 100
known_third_party = ["flask", "sqlalchemy", "pytest"]
known_first_party = ["app"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
skip_glob = ["*/migrations/*", "*/venv/*"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "app.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = """
    -ra
    -q
    --strict-markers
    --cov=app
    --cov-report=html
    --cov-report=term-missing:skip-covered
    --cov-fail-under=90
"""
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__init__.py",
    "*/config.py",
    "*/venv/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.bandit]
targets = ["app"]
skip = ["B101"]  # Skip assert_used test
severity = "medium"
confidence = "medium"

[tool.commitizen]
name = "cz_conventional_commits"
version = "1.0.0"
tag_format = "v$version"
version_files = [
    "app/__init__.py:__version__",
    "pyproject.toml:version"
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "cibozer"
version = "1.0.0"
description = "AI-powered meal planning application"
authors = [{name = "Cibozer Team", email = "team@cibozer.com"}]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Framework :: Flask",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
dependencies = [
    "flask>=2.3.0",
    "flask-sqlalchemy>=3.0.0",
    "flask-login>=0.6.0",
    "flask-wtf>=1.1.0",
    "flask-migrate>=4.0.0",
    "flask-limiter>=3.0.0",
    "flask-mail>=0.9.0",
    "flask-caching>=2.0.0",
    "python-dotenv>=1.0.0",
    "bcrypt>=4.0.0",
    "email-validator>=2.0.0",
    "stripe>=5.0.0",
    "requests>=2.31.0",
    "gunicorn>=21.0.0",
    "redis>=5.0.0",
    "celery>=5.3.0",
    "prometheus-client>=0.19.0",
    "psutil>=5.9.0",
    "python-json-logger>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-flask>=1.2.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "bandit>=1.7.0",
    "pre-commit>=3.3.0",
    "factory-boy>=3.3.0",
    "faker>=19.0.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-flask>=1.2.0",
    "pytest-mock>=3.11.0",
    "factory-boy>=3.3.0",
    "faker>=19.0.0",
    "responses>=0.23.0",
]
prod = [
    "psycopg2-binary>=2.9.0",
    "uwsgi>=2.0.0",
    "sentry-sdk[flask]>=1.30.0",
]

[project.urls]
Homepage = "https://cibozer.com"
Documentation = "https://docs.cibozer.com"
Repository = "https://github.com/cibozer/cibozer"
Issues = "https://github.com/cibozer/cibozer/issues"